#+TITLE: HerbstluftWM configuration
#+PROPERTY: header-args:shell :tangle .config/herbstluftwm/autostart :shebang #!/usr/bin/env bash :mkdirp yes
This configuration is using HerbstluftWM, its default panel and consider you are using rofi as an app launcher.

* Installation
** Herbstluftwm gnome flashback
Install gnome flashback before running this script

#+BEGIN_SRC shell :tangle .scripts/herbsluftwm/gnome-flashback-setup.sh :shebang #!/usr/bin/env bash :mkdirp yes
  mkdir -p ~/Tools
  cd ~/Tools
  git clone git@github.com:Vivien-lelouette/herbstluftwm-gnome-flashback.git

  cd herbstluftwm-gnome-flashback
  sudo make install
#+END_SRC

* HerbstluftWM configuration
#+BEGIN_SRC shell
  herbstluftwm_folder=~/.config/herbstluftwm
  herbstluftwm_scripts_folder=$herbstluftwm_folder/scripts
#+END_SRC

** Utils
*** Focus timestamp attribute
Keep tracks of the last focused timestamp for every window.
#+BEGIN_SRC shell
  watch_focus_time()
  {
      herbstclient --idle 'focus_changed' | while read hook winid wintitle
      do
          herbstclient silent new_attr string clients.$winid.my_last_focused
          herbstclient set_attr clients.$winid.my_last_focused $(echo '('`date +"%s.%N"` ' * 1000000)/1' | bc)
      done
  }
#+END_SRC

** Herbstluftwm general setup
#+BEGIN_SRC shell
  herbstclient emit_hook reload

  herbstclient rule focus=on

  herbstclient set frame_gap 0

  herbstclient set auto_detect_monitors 1

  # default layout to max
  herbstclient set_layout max
  herbstclient set default_frame_layout 2
#+END_SRC

#+RESULTS:

** Theme
*** Colors
#+BEGIN_SRC shell
  export FG_COLOR='#d8dee9'
  export FG_ALT_COLOR='#93979f'
  export BG_COLOR='#2e3440'
  export BG_ALT_COLOR='#242832'
  export FOCUS_COLOR='#a3be8c'
  export ALERT_COLOR='#b48ead'
#+END_SRC

*** Theme
#+BEGIN_SRC shell
  xsetroot -solid "$BG_COLOR"

  herbstclient attr theme.tiling.reset 1
  herbstclient attr theme.floating.reset 1
  herbstclient set frame_border_active_color "$FOCUS_COLOR"
  herbstclient set frame_border_normal_color "$BG_ALT_COLOR"
  herbstclient set frame_bg_normal_color "$BG_COLOR"
  herbstclient set frame_bg_active_color "$BG_ALT_COLOR"
  herbstclient set frame_border_width 1
  herbstclient set always_show_frame on
  herbstclient set frame_bg_transparent on
  herbstclient set frame_transparent_width 5
  herbstclient set frame_gap 0

  herbstclient attr theme.title_height 0
  herbstclient attr theme.title_font 'SauceCodePro:pixelsize=12'  # example using Xft
  herbstclient attr theme.padding_top 0  # space below the title's baseline (i.e. text depth)
  herbstclient attr theme.active.color "$FOCUS_COLOR"
  herbstclient attr theme.normal.color "$BG_COLOR"
  herbstclient attr theme.urgent.color "$ALERT_COLOR"
  herbstclient attr theme.inner_width 1
  herbstclient attr theme.inner_color "$BG_COLOR"
  herbstclient attr theme.border_width 1
  herbstclient attr theme.floating.border_width 4
  herbstclient attr theme.floating.outer_width 1
  herbstclient attr theme.floating.outer_color "$BG_COLOR"
  herbstclient attr theme.active.inner_color "$FOCUS_COLOR"
  herbstclient attr theme.active.outer_color "$FOCUS_COLOR"
  herbstclient attr theme.background_color "$BG_COLOR"

  herbstclient set window_gap 0
  herbstclient set frame_padding 0
  herbstclient set smart_window_surroundings off
  herbstclient set smart_frame_surroundings off
  herbstclient set mouse_recenter_gap 0
#+END_SRC

** Keybinds
*** Remove all existing keybindings
#+BEGIN_SRC shell
  herbstclient keyunbind --all 
#+END_SRC

*** Super as mod key
#+BEGIN_SRC shell
  Mod=Mod4
#+END_SRC

*** Refresh configuration
#+BEGIN_SRC shell
  herbstclient keybind $Mod+Shift+r reload
#+END_SRC

*** Tags
#+BEGIN_SRC shell
  tag_names=( {1..9} 0 )
  tag_keys=( {1..9} 0 )

  herbstclient rename default "${tag_names[0]}" || true
  for i in "${!tag_names[@]}" ; do
      herbstclient add "${tag_names[$i]}"
      key="${tag_keys[$i]}"
      if ! [ -z "$key" ] ; then
          herbstclient keybind "$Mod-$key" use_index "$i"
          herbstclient keybind "$Mod-Shift-$key" move_index "$i"
      fi
  done
#+END_SRC

*** Frame management
#+BEGIN_SRC shell
  herbstclient keybind $Mod+q spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(kill-this-buffer)' 'herbstclient close'
  herbstclient keybind $Mod+Control+q close
  herbstclient keybind $Mod+Shift+q spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(evil-quit)' 'herbstclient remove'

  herbstclient keybind $Mod+s split right 0.5
  herbstclient keybind $Mod+Shift+s split bottom 0.5

  herbstclient keybind $Mod+w spawn bash $herbstluftwm_scripts_folder/switch_window.sh

  herbstclient keybind $Mod+Left spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(windmove-left)' 'herbstclient focus left'
  herbstclient keybind $Mod+Down spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(windmove-down)' 'herbstclient focus down'
  herbstclient keybind $Mod+Up spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(windmove-up)' 'herbstclient focus up'
  herbstclient keybind $Mod+Right spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(windmove-right)' 'herbstclient focus right'
  herbstclient keybind $Mod+h spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(windmove-left)' 'herbstclient focus left'
  herbstclient keybind $Mod+j spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(windmove-down)' 'herbstclient focus down'
  herbstclient keybind $Mod+k spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(windmove-up)' 'herbstclient focus up'
  herbstclient keybind $Mod+l spawn bash $herbstluftwm_scripts_folder/emacs_or_herbstluftwm_command.sh '(windmove-right)' 'herbstclient focus right'

  herbstclient keybind $Mod+Shift+Left shift left
  herbstclient keybind $Mod+Shift+Down shift down
  herbstclient keybind $Mod+Shift+Up shift up
  herbstclient keybind $Mod+Shift+Right shift right
  herbstclient keybind $Mod+Shift+h shift left
  herbstclient keybind $Mod+Shift+j shift down
  herbstclient keybind $Mod+Shift+k shift up
  herbstclient keybind $Mod+Shift+l shift right

  herbstclient keybind $Mod+Control+space split explode
  herbstclient keybind $Mod+Control+h resize left +0.05
  herbstclient keybind $Mod+Control+j resize down +0.05
  herbstclient keybind $Mod+Control+k resize up +0.05
  herbstclient keybind $Mod+Control+l resize right +0.05
  herbstclient keybind $Mod+Control+Left resize left +0.05
  herbstclient keybind $Mod+Control+Down resize down +0.05
  herbstclient keybind $Mod+Control+Up resize up +0.05
  herbstclient keybind $Mod+Control+Right resize right +0.05

  herbstclient keybind $Mod+1 use_index 0
  herbstclient keybind $Mod+Shift+1 move_index 0
  herbstclient keybind $Mod+2 use_index 1
  herbstclient keybind $Mod+Shift+2 move_index 1
  herbstclient keybind $Mod+3 use_index 2
  herbstclient keybind $Mod+Shift+3 move_index 2
  herbstclient keybind $Mod+4 use_index 3
  herbstclient keybind $Mod+Shift+4 move_index 3
  herbstclient keybind $Mod+5 use_index 4
  herbstclient keybind $Mod+Shift+5 move_index 4
  herbstclient keybind $Mod+6 use_index 5
  herbstclient keybind $Mod+Shift+6 move_index 5
  herbstclient keybind $Mod+7 use_index 6
  herbstclient keybind $Mod+Shift+7 move_index 6
  herbstclient keybind $Mod+8 use_index 7
  herbstclient keybind $Mod+Shift+8 move_index 7
  herbstclient keybind $Mod+9 use_index 8
  herbstclient keybind $Mod+Shift+9 move_index 8

  herbstclient keybind $Mod+f fullscreen toggle
  herbstclient keybind $Mod+Shift+f floating toggle
  herbstclient keybind $Mod+Control+f attr clients.focus.floating toggle
  herbstclient keybind $Mod+BackSpace cycle_monitor
#+END_SRC

*** Programs
#+BEGIN_SRC shell
  herbstclient keybind $Mod+Shift+Return spawn gnome-terminal

  herbstclient keybind $Mod+c cycle_all +1

  herbstclient keybind $Mod+Tab spawn bash $herbstluftwm_scripts_folder/switch_by_classes.sh 1 "" 'qutebrowser\|Vivaldi-stable\|Emacs'
  herbstclient keybind $Mod+Shift+Tab spawn bash $herbstluftwm_scripts_folder/switch_by_classes.sh -1 "" 'qutebrowser\|Vivaldi-stable\|Emacs'

  herbstclient keybind $Mod+Control+i spawn vivaldi-stable
  herbstclient keybind $Mod+i spawn bash $herbstluftwm_scripts_folder/switch_by_classes.sh 1 'qutebrowser\|Vivaldi-stable' '' 'vivaldi-stable'
  herbstclient keybind $Mod+Shift+i spawn bash $herbstluftwm_scripts_folder/switch_by_classes.sh -1 'qutebrowser\|Vivaldi-stable' '' 'vivaldi-stable'

  herbstclient keybind $Mod+a spawn rofi -show drun -display-drun ''
  herbstclient keybind $Mod+Shift+a spawn rofi -show run -display-run ''

  herbstclient keybind $Mod+Control+e spawn emacsclient -c
  herbstclient keybind $Mod+e spawn bash $herbstluftwm_scripts_folder/switch_by_classes.sh 1 'Emacs' '' 'emacsclient -c'
  herbstclient keybind $Mod+Shift+e spawn bash $herbstluftwm_scripts_folder/switch_by_classes.sh -1 'Emacs' '' 'emacsclient -c'
  herbstclient keybind $Mod+Return spawn bash $herbstluftwm_scripts_folder/emacs_command.sh "(call-interactively #'+vterm/here)"
  herbstclient keybind $Mod+b spawn bash $herbstluftwm_scripts_folder/emacs_command.sh "(call-interactively #'consult-buffer)"
  herbstclient keybind $Mod+Shift+b spawn bash $herbstluftwm_scripts_folder/emacs_command.sh "(call-interactively #'ibuffer)"
  herbstclient keybind $Mod+p spawn bash $herbstluftwm_scripts_folder/emacs_command.sh "(call-interactively #'treemacs)"
  herbstclient keybind $Mod+period spawn bash $herbstluftwm_scripts_folder/emacs_command.sh "(funcall-interactively #'dired-open-home-dir)"
  herbstclient keybind $Mod+Shift+period spawn bash $herbstluftwm_scripts_folder/emacs_command.sh "(funcall-interactively #'dired-open-current-dir)"
  herbstclient keybind $Mod+x spawn bash $herbstluftwm_scripts_folder/emacs_command.sh "(call-interactively #'execute-extended-command)"
  herbstclient keybind $Mod+Control+Return spawn bash -c 'RULES="pseudotile=on focus=on" '$herbstluftwm_scripts_folder'/spawn_with_rules.sh emacsclient --eval "(emacs-everywhere)"'
#+END_SRC

*** Power menu
#+BEGIN_SRC shell
  herbstclient keybind $Mod+Control+p spawn bash $herbstluftwm_scripts_folder/power_menu.sh
#+END_SRC

*** Settings menu
#+BEGIN_SRC shell
  herbstclient keybind $Mod+Control+o spawn bash $herbstluftwm_scripts_folder/settings_menu.sh
#+END_SRC

** Mouse binding
#+BEGIN_SRC shell
  herbstclient mouseunbind --all
  herbstclient mousebind $Mod-Button1 move
  herbstclient mousebind $Mod-Button2 zoom
  herbstclient mousebind $Mod-Button3 resize

  herbstclient set focus_follows_mouse 0

  bash ~/.scripts/trackball-setup.sh &
#+END_SRC

** Setups
*** Multi-monitor
#+BEGIN_SRC shell
  herbstclient detect_monitors
  herbstclient set focus_crosses_monitor_boundaries 1

  for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
      # start it on each monitor
      herbstclient pad $monitor 22 &
  done
#+END_SRC

*** Keyboard layout
#+BEGIN_SRC shell
  setxkbmap -layout us -option 'compose:rctrl' -option 'caps:ctrl_modifier' && xcape -e 'Caps_Lock=Escape'
#+END_SRC

*** Gnome flashback
#+BEGIN_SRC shell
  gsettings set org.gnome.gnome-flashback.desktop.icons show-home false
  gsettings set org.gnome.gnome-flashback.desktop.icons show-trash false
#+END_SRC

*** Panel
#+BEGIN_SRC shell
  bash ~/.config/polybar/start_polybar.sh
#+END_SRC

** Startup applications
#+BEGIN_SRC shell
  nohup emacs --daemon >> /dev/null &
#+END_SRC

** Start watching focused times
#+BEGIN_SRC shell
  watch_focus_time &
#+END_SRC

* Scripts
** Spawn with rules
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/spawn_with_rules.sh :shebang #!/usr/bin/env bash :mkdirp yes
#herbstclient rule once maxage=10 pseudotile=on focus=on
echo "RULES: ${RULES}" > ~/temp-rules
echo "herbstclient rule once maxage=10 ${RULES[@]}" >> ~/temp-rules
herbstclient rule once maxage=10 ${RULES[@]}
exec "$@"
#+END_SRC

** Window manipulation
*** Go direction
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/go_direction.sh :shebang #!/usr/bin/env bash :mkdirp yes
  if [ "$(herbstclient get_attr clients.focus.class)" == "Emacs" ]
  then
      timeout 0.2 emacsclient -e "(windmove-$1)"
      if [ $? -ne 0 ]
      then
          herbstclient focus $1
      fi
  else
      herbstclient focus $1
  fi
#+END_SRC

*** List switchable clients
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/list_switchable_clients.sh :shebang #!/usr/bin/env bash :mkdirp yes
      list_all_clients=${1:-0}
      merge_emacs_buffers=${2:-1}
      show_hidden_windows=${3:-0}

      script_path="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

      client_list=$(herbstclient object_tree clients \
                        | grep -E "0x" \
                        | sed -e "s/.* 0x/0x/g" \
                        | while read -r winid;do \
                        echo \
                            $(herbstclient silent new_attr string clients.$winid.my_last_focused && herbstclient set_attr clients.$winid.my_last_focused "0") \
                            visible=$(herbstclient get_attr clients.$winid.visible) \
                            $(herbstclient get_attr clients.$winid.tag) \
                            $(herbstclient get_attr clients.$winid.my_last_focused) \
                            $winid¤\
                            $(herbstclient get_attr clients.$winid.class) \
                            "\"herbstclient bring $winid\"" \
                        ;done \
                        | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//')

      if [ $list_all_clients -ne 1 ]
      then
          client_list=$(echo "${client_list}" \
                            | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//' \
                            | grep -v "^visible=false ")
      fi

      client_list=$(echo "${client_list}" \
                        | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//' \
                        | cut -d' ' -f2- \
                        | sort)


      client_visible_list=$(echo "${client_list}" \
                                | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//' \
                                | cut -d' ' -f1 \
                                | uniq \
                                | while read -r tagid;do \
                                herbstclient dump $tagid \
                                    | sed -e 's/(//g' -e 's/)//g' -e "s/clients /\n/g" \
                                    | grep "^max:" \
                                    | sed "s/max://g" \
                                    | while read -r index line;do \
                                    echo $line \
                                        | cut -d' ' -f$(( $index + 1)) \
                                    ;done \
                                ;done)

      if [ $list_all_clients -ne 1 ]
      then
          client_list=$(echo "${client_list}" \
                            | grep -v "$(echo "${client_visible_list}" \
          | uniq \
          | xargs echo \
          | sed -e 's/ /\\|/g' -e 's/\\|$//g')")
      fi

      client_list=$(echo "${client_list}" \
                        | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//' \
                        | cut -d' ' -f3-)

      if [ $merge_emacs_buffers -eq 1 ]
      then
          emacs_buffer_list=$(timeout 0.5 emacsclient -e "(buffer-list)" \
                                  | sed -e 's/(//g' -e 's/)//g' -e 's/.$//' -e "s/>\ #/\n #/g" -e "s/\ *#<buffer\ *//g" \
                                  | tac \
                                  | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' \
                                  | while read -r name;do \
                                  echo \
                                      $name¤\
                                      'Emacs' \
                                      "\"bash ${script_path}/emacs_switch_to_buffer.sh '$name'\"" \
                                  ;done)

          client_list=$(echo "${client_list}" \
                            | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//' \
                            | grep -v " Emacs \"")

          client_list=$(echo "$client_list \

                             $emacs_buffer_list")
      fi

      if [ $show_hidden_windows -ne 1 ]
      then
          client_list=$(echo "${client_list}" \
                            | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//' \
                            | grep -v "^\magit" \
                            | grep -v "^\*")
      fi

      echo "${client_list}" \
          | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//' \
          | sed '/^$/d'
#+END_SRC

*** Switch by classes
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/switch_by_classes.sh :shebang #!/usr/bin/env bash :mkdirp yes
  direction=$1
  include_classes=$2
  exclude_classes=$3
  fallback_command=$4

  init_state="$(herbstclient dump)"

  script_folder="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

  switchable_clients=$(bash $script_folder/list_switchable_clients.sh 0 1 | sed '/^$/d')

  if [ -n "$include_classes" ]
  then
      switchable_clients=$(echo "$switchable_clients" | grep "$include_classes")
  fi

  if [ -n "$exclude_classes" ]
  then
      switchable_clients=$(echo "$switchable_clients" | grep -v "$exclude_classes")
  fi

  if [ $direction -lt 0 ]
  then
      switchable_clients=$(echo "$switchable_clients" | tail -2 | head -1)
  else
      switchable_clients=$(echo "$switchable_clients" | head -1)
  fi

  cmd=$(echo $switchable_clients | sed "s/.*\ \"/\"/g")

  $(echo ${cmd:1:-1})

  if [ "$(herbstclient dump)" = "$init_state" ]
  then
      if echo "$include_classes" | grep -qE "$(herbstclient get_attr clients.focus.class)"
      then
          if [ "$(herbstclient get_attr clients.focus.class)" == "" ]
          then
              $(echo ${fallback_command})
              sleep 0.1
          fi
      else
          $(echo ${fallback_command})
          sleep 0.1
      fi
  fi
#+END_SRC

** Emacs integration
*** Emacs or Herbstluftwm command
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/emacs_or_herbstluftwm_command.sh :shebang #!/usr/bin/env bash :mkdirp yes
  if [ "$(herbstclient get_attr clients.focus.class)" == "Emacs" ]
  then
      timeout 0.5 bash -c "emacsclient -e \"(with-current-buffer (window-buffer (selected-window)) $1)\""
      if [ $? -ne 0 ]
      then
          bash -c "$2"
      fi
  else
      bash -c "$2"
  fi
#+END_SRC

*** Emacs command
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/emacs_command.sh :shebang #!/usr/bin/env bash :mkdirp yes
  script_folder="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
  if [ \"$(herbstclient get_attr clients.focus.class)\" != \"Emacs\" ]
  then
      client_list=$(bash $script_folder/list_switchable_clients.sh 0 0)
      emacs_client_id=$(echo "${client_list}" \
                            | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//' \
                            | grep " Emacs \"" \
                            | tail -1 \
                            | sed 's/¤.*//g')
      echo $emacs_client_id
      if [ -z "$emacs_client_id" ]
      then
        emacsclient -c &
      else
        herbstclient bring $emacs_client_id &
      fi
      sleep 0.5
  fi
  bash $script_folder/emacs_or_herbstluftwm_command.sh "$1"
#+END_SRC

*** Emacs switch to buffer
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/emacs_switch_to_buffer.sh :shebang #!/usr/bin/env bash :mkdirp yes
  script_folder="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
  bash $script_folder/emacs_command.sh "(switch-to-buffer \\\"$(echo $@ | sed -e "s/'//g")\\\")"
#+END_SRC

** Interactive
*** Switch window
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/switch_window.sh :shebang #!/usr/bin/env bash :mkdirp yes
  script_folder="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
  client_list=$(bash $script_folder/list_switchable_clients.sh 1)

  display_client_list=$(echo "${client_list}" \
                            | grep -v " Emacs \"" \
                            | sed 's/¤//g' \
                            | while read -r winid other;do \
                            echo \
                                $winid¤\
                                $(herbstclient get_attr clients.$winid.class): \
                                $(herbstclient get_attr clients.$winid.title) \
                            ;done \
                            | sed -e 's/^ //g' -e 's/^[ \t]*//;s/[ \t]*$//')

  emacs_buffer_list=$(echo "${client_list}" \
                          | grep -e " Emacs \"" \
                          | sed 's/¤.*//g' \
                          | while read -r name;do \
                          echo \
                              $name¤\
                              "Emacs: " \
                              $name \
                          ;done)


  display_client_list=$(echo "$display_client_list \

  $emacs_buffer_list")

  client=$(echo "$display_client_list" | sed 's/.*¤ //g' | rofi -dmenu -i -p "")

  if [ $? -eq 0 ]
  then
      clientid=$(echo "${display_client_list}" | grep " $client" | head -1 | sed 's/¤.*//g')
      cmd=$(echo "${client_list}" | grep "^${clientid}¤" | sed 's/.* \"/\"/g')
      $(echo ${cmd:1:-1})
  fi
#+END_SRC

*** Power menu
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/power_menu.sh :shebang #!/usr/bin/env bash :mkdirp yes
selected_option=$(echo -e "shutdown\nreboot\nlogout" | rofi -dmenu -i -p "")

if [ $? -eq 0 ]
then
    case $selected_option in
        'shutdown')
            shutdown -h 0
        ;;
        'reboot')
            reboot
        ;;
        'logout')
            gnome-session-quit --force
        ;;
    esac
fi
#+END_SRC

#+RESULTS:

*** Settings menu
#+BEGIN_SRC shell :tangle .config/herbstluftwm/scripts/settings_menu.sh :shebang #!/usr/bin/env bash :mkdirp yes
selected_option=$(gnome-control-center -l | sed -e '1d' -e 's/^[[:space:]]*//' | rofi -dmenu -i -p "")

if [ $? -eq 0 ]
then
    gnome-control-center $selected_option
fi
#+END_SRC
